USE master
GO

--Vérification que la database n'existe pas
IF EXISTS ( SELECT * FROM sys.databases WHERE name = 'DataMart' )
    ALTER DATABASE DataMart SET SINGLE_USER WITH ROLLBACK IMMEDIATE
GO
IF EXISTS ( SELECT * FROM sys.databases WHERE name = 'DataMart' )
    DROP DATABASE DataMart 
GO
CREATE DATABASE DataMart
GO

sp_configure 'contained database authentication', 1;
GO
RECONFIGURE;
GO

ALTER DATABASE DataMart SET RECOVERY SIMPLE
GO

USE DataMart
GO

SELECT * FROM sys.filegroups
SELECT * FROM sys.database_files 
GO

IF OBJECT_ID('dbo.UUT_RESULT') IS NULL
CREATE TABLE UUT_RESULT (

 ID uniqueidentifier PRIMARY KEY,
 STATION_ID varchar(255),
 BATCH_SERIAL_NUMBER varchar(255),
 TEST_SOCKET_INDEX	int,
 UUT_SERIAL_NUMBER varchar(255),
 USER_LOGIN_NAME	varchar(255),
 START_DATE_TIME datetime,
 EXECUTION_TIME decimal(18,5),
 UUT_STATUS varchar(255),
 UUT_ERROR_CODE	int,
 UUT_ERROR_MESSAGE	varchar(255),
 INTERFACE_JIG varchar(255),
 PRODUCT varchar(255)
) 
GO


IF OBJECT_ID('dbo.STEP_RESULT') IS NULL
CREATE TABLE STEP_RESULT (

 ID uniqueidentifier PRIMARY KEY,
 UUT_RESULT uniqueidentifier,
 STEP_PARENT	int,
 ORDER_NUMBER int,
 STEP_NAME varchar(255),
 STEP_TYPE	varchar(255),
 STEP_GROUP	varchar(32),
 STEP_INDEX	int,
 STEP_ID	varchar(32),
 STATUS	varchar(255),
 REPORT_TEXT	varchar(255),
 ERROR_CODE	int,
 ERROR_MESSAGE	varchar(255),
 CAUSED_SEQFAIL	bit,
 MODULE_TIME	decimal(18,5),
 TOTAL_TIME	decimal(18,5),
 NUM_LOOPS	int,
 NUM_PASSED	int,
 NUM_FAILED	int,
 ENDING_LOOP_INDEX	int,
 LOOP_INDEX	int,
 INTERACTIVE_EXENUM	int,
 RESULT_TYPE varchar(255),
 DATA	float,
 HIGH_LIMIT float,
 LOW_LIMIT float,
 UNITS varchar(255),
 CONSTRAINT STEP_RESULT_UUT_RESULT_FK FOREIGN KEY (UUT_RESULT) REFERENCES UUT_RESULT (ID)
)
GO

IF OBJECT_ID('dbo.STEP_SEQCALL') IS NULL
CREATE TABLE STEP_SEQCALL (

 ID	uniqueidentifier PRIMARY KEY,
 STEP_RESULT	uniqueidentifier,
 SEQUENCE_NAME	varchar(255),
 SEQUENCE_FILE_PATH	varchar(1024),
CONSTRAINT STEP_SEQCALL_STEP_RESULT_FK FOREIGN KEY (STEP_RESULT) REFERENCES STEP_RESULT (ID)
)
GO

IF OBJECT_ID('dbo.PROP_RESULT') IS NULL
CREATE TABLE PROP_RESULT (
ID	uniqueidentifier PRIMARY KEY,
STEP_RESULT	uniqueidentifier,
PROP_PARENT	int,
ORDER_NUMBER	int,
NAME	varchar(255),
PATH	varchar(1024),
CATEGORY	int,
TYPE_VALUE	int,
TYPE_NAME	varchar(255),
DISPLAY_FORMAT	varchar(32),
DATA	varchar(255),
CONSTRAINT PROP_RESULT_STEP_RESULT_FK FOREIGN KEY (STEP_RESULT) REFERENCES STEP_RESULT (ID)
)
GO

IF OBJECT_ID('dbo.PROP_NUMERICLIMIT') IS NULL
CREATE TABLE [dbo].[PROP_NUMERICLIMIT](
	ID	uniqueidentifier PRIMARY KEY,
	PROP_RESULT uniqueidentifier,
	COMP_OPERATOR varchar(32),
	HIGH_LIMIT float,
	LOW_LIMIT float,
	UNITS varchar(255),
	STATUS varchar(255),
CONSTRAINT PROP_NUMERICLIMIT_PROP_RESULT_FK FOREIGN KEY (PROP_RESULT) REFERENCES PROP_RESULT (ID)
)
GO

CREATE NONCLUSTERED COLUMNSTORE INDEX CSI_UUT_RESULT
ON dbo.UUT_RESULT
(
	ID,
	STATION_ID,
	BATCH_SERIAL_NUMBER,
	TEST_SOCKET_INDEX,
	UUT_SERIAL_NUMBER,
	USER_LOGIN_NAME,
	START_DATE_TIME,
	EXECUTION_TIME,
	UUT_STATUS,
	UUT_ERROR_CODE,
	UUT_ERROR_MESSAGE,
	INTERFACE_JIG,
	PRODUCT
)
GO

CREATE NONCLUSTERED COLUMNSTORE INDEX CSI_STEP_RESULT
ON dbo.STEP_RESULT
(
	 ID,
	 UUT_RESULT,
	 STEP_PARENT,
	 ORDER_NUMBER,
	 STEP_NAME,
	 STEP_TYPE,
	 STEP_GROUP,
	 STEP_INDEX,
	 STEP_ID,
	 STATUS,
	 REPORT_TEXT,
	 ERROR_CODE,
	 ERROR_MESSAGE,
	 CAUSED_SEQFAIL,
	 MODULE_TIME,
	 TOTAL_TIME,
	 NUM_LOOPS,
	 NUM_PASSED,
	 NUM_FAILED,
	 ENDING_LOOP_INDEX,
	 LOOP_INDEX,
	 INTERACTIVE_EXENUM,
	 RESULT_TYPE,
	 DATA,
	 HIGH_LIMIT,
	 LOW_LIMIT,
	 UNITS
)
GO

CREATE NONCLUSTERED COLUMNSTORE INDEX CSI_STEP_SEQCALL
ON dbo.STEP_SEQCALL
(
	ID,
	STEP_RESULT,
	SEQUENCE_NAME,
	SEQUENCE_FILE_PATH,
	INTERFACE_JIG
)
GO

CREATE NONCLUSTERED COLUMNSTORE INDEX CSI_PROP_RESULT
ON dbo.PROP_RESULT
(
	ID,
	STEP_RESULT,
	PROP_PARENT,
	ORDER_NUMBER,
	NAME,
	PATH,
	CATEGORY,
	TYPE_VALUE,
	TYPE_NAME,
	DISPLAY_FORMAT,
	DATA
)
GO

CREATE NONCLUSTERED COLUMNSTORE INDEX CSI_PROP_NUMERICLIMIT
ON dbo.PROP_NUMERICLIMIT
(
	ID,
	PROP_RESULT,
	COMP_OPERATOR,
	HIGH_LIMIT,
	LOW_LIMIT,
	UNITS,
	STATUS
)
GO